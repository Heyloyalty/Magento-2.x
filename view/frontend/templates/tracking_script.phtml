<?php

use Magento\Framework\Escaper;
use Wexo\HeyLoyalty\Block\Tracking as TrackingBlock;

/** @var TrackingBlock $block */
/** @var Escaper $escaper */
$viewModel = $block->getViewModel();
$apiKey = $viewModel->getApiKey();
$sessionTime = $viewModel->getSessionTime();
$trackingId = $viewModel->getTrackingId();
$trackingActivated = $viewModel->getIsTrackingActivated();

$product = $viewModel->getCurrentProduct();
$category = $viewModel->getCurrentCategory();
$quoteId = $viewModel->getQuoteId();

$email = $viewModel->getEmail();
?>
<?php if ($trackingActivated) : ?>
    <script type="text/javascript">
        let BiTrackingLoaded = function(BiTracking) {
            window.hlt = BiTracking;
            BiTracking.initialize(
                "<?= $escaper->escapeHtml($apiKey) ?>",
                "<?= $escaper->escapeHtml($sessionTime) ?>",
                "<?= $escaper->escapeHtml($trackingId) ?>"
            );
            <?php if($viewModel->isSuccessPage()): ?>
                hltPurchasedBasket();
            <?php else: ?>
                hltVisit();
            <?php endif; ?>
        }
    </script>
    <script>
        (function(d, t) {
                let g = d.createElement(t),
                    s = d.getElementsByTagName(t)[0];
                h = "https:" === document.location.protocol ? "https://" : "http://";
                g.src = h + 'bi.heyloyalty.com/hlbi.js';
                s.parentNode.insertBefore(g, s);
            }
            (document, 'script'));
    </script>

    <!-- hlt.visit(productid, categoryid, categoryname)/()/(,,categoryname) -->
    <script>
        function hltVisit() {
            let productId = <?= $product?->getId() ?? 'null' ?>;
            let categoryId = <?= $category?->getId() ?? 'null' ?>;
            let categoryName = "<?= $category?->getName() ?? null ?>";
            console.debug('HeyLoyalty :: HIT', {
                productId,
                categoryId,
                categoryName
            });
            if(
                productId === null &&
                categoryId === null &&
                categoryName.length === 0
            ) {
                window.hlt.visit();
                return;
            }
            window.hlt.visit(
                "<?= $product?->getId() ?? '' ?>",
                "<?= $category?->getId() ?? '' ?>",
                "<?= $category?->getName() ?? '' ?>"
            );
        }
    </script>


    <!--hlt.addToBasket(productid, productCount, categoryid, basketid, categoryname)-->
    <script>
        function hltAddToBasket(productId, qty) {
            console.debug('HeyLoyalty :: AddToBasket', [
                productId,
                qty,
                "<?= $category?->getId() ?? '' ?>",
                "<?= $quoteId ?>",
                "<?= $category?->getName() ?? '' ?>"
            ]);
            window.hlt.addToBasket(productId, "1", "<?= $category?->getId() ?? '' ?>", "<?= $quoteId ?>", "<?= $category?->getName() ?? '' ?>");
        }
    </script>

    <!--hlt.removeFromBasket(productid)-->
    <script>
        function hltRemoveFromBasket(productId) {
            console.debug('HeyLoyalty :: RemoveFromBasket', [
                productId
            ]);
            window.hlt.removeFromBasket(productId);
        }
    </script>

    <!--hlt.purchasedBasket-->
    <script>
        function hltPurchasedBasket() {
            console.debug('HeyLoyalty :: PurchasedBasket');
            window.hlt.purchasedBasket();
        }
    </script>

    <!--hlt.pairEmail(email)-->
    <script>
        function hltPairEmail(email) {
            window.hlt.pairEmail(email);
        }
    </script>

    <!--hlt.heartbeat()-->
    <script>
        function hltHeartbeat() {
            console.debug('HeyLoyalty :: Heartbeat');
            window.hlt.heartbeat();
        }
    </script>


    <script>
        require(['Magento_Customer/js/customer-data'], function(customerData) {
            let cart = customerData.get('cart');
            let init = true;
            let initialCartData = [];
            cart.subscribe(function(test) {
                if (init) {
                    initialCartData = cart().items.map(item => {
                        return {
                            product_id: item.product_id,
                            qty: item.qty,
                            product_sku: item.product_sku
                        }
                    })
                    init = false;
                }
                let cartUpdatedData = cart().items.map(item => {
                    return {
                        product_id: item.product_id,
                        qty: item.qty,
                        product_sku: item.product_sku
                    }
                });
                let add_to_cart = getAddedItems(initialCartData, cartUpdatedData);
                let remove_from_cart = getRemovedItems(initialCartData, cartUpdatedData);
                add_to_cart.forEach(function(item) {
                    hltAddToBasket(item.product_id, item.qty);
                });
                remove_from_cart.forEach(function(item) {
                    hltRemoveFromBasket(item.product_id);
                });
                initialCartData = cartUpdatedData;
            });
        });

        function getAddedItems(oldArray, newArray) {
            let diff = newArray.filter(item => !oldArray.some(oldItem => oldItem.product_id === item.product_id && oldItem.qty >= item.qty));
            if (diff.length > 0) {
                diff = diff.map((item) => {
                    let oldItem = oldArray.find(old => old.product_id === item.product_id);
                    oldQty = oldItem !== undefined ? oldItem.qty : 0;
                    return {
                        product_id: item.product_id,
                        qty: item.qty - oldQty,
                        product_sku: item.product_sku
                    }
                });
            }
            return diff;
        }

        function getRemovedItems(oldArray, newArray) {
            return oldArray.filter(oldItem => !newArray.some(item => item.product_id === oldItem.product_id && item.qty >= oldItem.qty));
        }

        function combineItems(item) {
            return item.product_id + '_' + item.qty + '_' + item.product_sku;
        }
    </script>
<?php endif; ?>